package HomeWork3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HW3_T1 {
	public static void main(String[] args) throws IOException {
	    BufferedReader br = new BufferedReader(
		new InputStreamReader(System.in));

	    System.out.println("Please, input any three float numbers (not in row but from paragraph)!");
	    float a = Float.parseFloat(br.readLine());
	    float b = Float.parseFloat(br.readLine());
	    float c = Float.parseFloat(br.readLine());
	   
	    if (a < -5 || a >5) {
	    	System.out.println("First number is out of range [-5,5]");
	    }
	    
	    if (b < -5 || b >5) {
	    	System.out.println("Second number is out of range [-5,5]");
	    } 
	    if (c < -5 || c >5) {
	    	System.out.println("Third number is out of range [-5,5]");
	    }
	    else {
	    	System.out.println("All entered numbers are in range");	
	    }
}
}

//

package HomeWork3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HW3_T2 {

	public static void main(String[] args) throws IOException {
	    BufferedReader br = new BufferedReader(
		new InputStreamReader(System.in));

	    System.out.println("Please, input any three UNIQUE integer numbers (not in row but from paragraph)!");
	    int a = Integer.parseInt(br.readLine());
	    int b = Integer.parseInt(br.readLine());
	    int c = Integer.parseInt(br.readLine());
	   
	    if (a > b && a > c) {
	    	System.out.println(a + " is the biggest number");
	    }
	    else if (a < b && a < c) {
	    	System.out.println(a + " is the smallest number");
	    }
	    
	    if (b > a && b > c) {
	    	System.out.println(b + " is the biggest number");
	    }
	    else if (b < a && b < c) {
	    	System.out.println(b + " is the smallest number");
	    }
	    if (c > b && c > a) {
	    	System.out.println(c + " is the biggest number");
	    }
	    else if (c < b && c < a) {
	    	System.out.println(c + " is the smallest number");
	    }
}
}

//

package HomeWork3;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HW3_T3 {

	public enum HTTPError {
		Error400, Error401, Error402
	}

	
	public static void main(String[] args) throws IOException {
	    BufferedReader br = new BufferedReader(
		new InputStreamReader(System.in));

	    HTTPError httperror;
		
	    System.out.println("Please, input number of error that has occured");
	    int input = Integer.parseInt(br.readLine());
	    
		switch (input) {
		case 401: 
			httperror = HTTPError.Error401;
			System.out.println(httperror + " is caused by connection issuses");
			break;
		case 400: 
			httperror = HTTPError.Error400;
			System.out.println(httperror + " is caused by you");
			break;
		case 402: 
			httperror = HTTPError.Error402;
			System.out.println(httperror + " is caused by technical issuses");
			break;
		default:
			System.out.println("Unknown error");
			System.exit(0);
		}
		
		
	}

}

//

package HomeWork3;

public class Dog {
	public String name;
	public Integer age;

	public enum Breed {
		Kolly, Buldog, Labrador, Doberman
	}

	Breed breed;

	public Dog(String name, Breed breed, Integer age) {
		this.name = name;
		this.breed = breed;
		this.age = age;
	}

	String getName() {
		return name;
	}

		Integer getAge() {
		return age;
	}

	Breed getBreed() {
		return breed;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getName() != ((Dog) obj).getName())
			return false;
		Dog other = (Dog) obj;
		if (name != other.name) return false;
		if (name == null) {
			if (other.name != null) return false;
		} else if (!name.equals(other.name)) return false;
		return true;
	}
	
}

//

package HomeWork3;

public class Main_Dog {

	public static void main(String[] args) {
		Dog dog1 = new Dog("Lessi", Dog.Breed.Kolly, 5);
		Dog dog2 = new Dog("Rex", Dog.Breed.Labrador, 2);
		Dog dog3 = new Dog("Rex", Dog.Breed.Doberman, 7);

		

		if (dog1.getName().equals(dog2.getName())) {
			System.out.println("First and second dogs have same name");
		} else if (dog2.getName().equals(dog3.getName())) {
			System.out.println("Second and third dogs have same name");
		} else if (dog3.getName().equals(dog1.getName())) {
			System.out.println("First and third dogs have same name");
		} else {
			System.out.println("All dogs have different names");
		}

		if (dog1.getAge() > dog2.getAge() && dog1.getAge() > dog3.getAge()) {
			System.out.println("The oldest dog is " + dog1.getName() + ". His age is " + dog1.getAge() + " and breed "
					+ dog1.getBreed());
		} else if (dog2.getAge() > dog3.getAge() && dog2.getAge() > dog1.getAge()) {
			System.out.println("The oldest dog is " + dog2.getName() + ". His age is " + dog2.getAge() + " and breed "
					+ dog2.getBreed());
		}
		else if (dog3.getAge() > dog1.getAge() && dog3.getAge() > dog2.getAge()) {
			System.out.println("The oldest dog is " + dog3.getName() + ". His age is " + dog3.getAge() + " and breed "
					+ dog3.getBreed());
		} else {
			System.out.println("The dogs age is the same");
		}
	}
}